sqrt(1000)
x = matrix(runif(10), 5, 2)
x
kmeans(x)
kmeans(x, centres = 2)
kmeans(x, centers = 2)
kmeans(x, centers = 2, iter.max = inf)
inf
kmeans(x, centers = 2, iter.max = Inf)
kmeans(x, centers = 2, iter.max = 10)
kmeans(x, centers = 2, iter.max = 10)$iter
kmeans(x, centers = 2, iter.max = 20)$iter
kmeans(x, centers = 2, iter.max = 50)$iter
kmeans(x, centers = 3, iter.max = 50)$iter
kmeans(x, centers = 3, iter.max = 1000000)$iter
source('~/Untitled.R')
plot(data$x, data$y)
source('~/Untitled.R')
result
result$cluters
result$cluter
resul$cluter
result$cluter
result$cluster
source('~/Untitled.R')
result$cluster
data$x[result$cluster == 1]
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
source('~/Untitled.R')
sqrt(4)
fisher.test(rbind(c(103,18801-103), c(81,18785-81)), alternative="less")
fisher.test(rbind(c(103,18801-103), c(81,18785-81)), alternative="greater")
fisher.test(rbind(c(103,18801-103), c(81,18785-81)))
fisher.test(rbind(c(103,18801-103), c(81,18785-81)))
chisq.test(rbind(c(103,18801-103), c(81,18785-81)))
fisher.test(rbind(c(103,18801-103), c(81,18785-81)), alternative="greater")
v_h = c(88.5,	86.6,	47.6,	78.5,	45.6,	48.5)
v_a = c(99.5,	97.9,	55.7,	85.4,	69.2,	59.4)
v_r = c(96.51, 94.44, 51.54, 77.49, 62.53, 58.79)
plot(v_h, v_r)
plot(v_h, v_a)
plot(v_h, v_r, xlim = c(50,100), ylim = c(50, 100))
plot(v_h, v_a, xlim = c(50,100), ylim = c(50, 100))
plot(v_h, v_r, xlim = c(50,100), ylim = c(50, 100)); abline(a = 0, b = 1)
plot(v_h, v_a, xlim = c(50,100), ylim = c(50, 100)); abline(a = 0, b = 1)
plot(v_h, v_r, xlim = c(50,100), ylim = c(50, 100)); abline(a = 0, b = 1)
plot(v_h, v_a, xlim = c(50,100), ylim = c(50, 100)); abline(a = 0, b = 1)
plot(v_h, v_r, xlim = c(50,100), ylim = c(50, 100)); abline(a = 0, b = 1)
plot(v_h, v_a, xlim = c(50,100), ylim = c(50, 100)); abline(a = 0, b = 1)
X11()
N.cases = 50
N.control = 135
effect.size = 1.5
library(pwr)
sig = 0.05
p1 = pwr.t2n.test(d=ds,n1=N.cases,n2=N.control , sig.level = sig)$power
print(p1)
N.cases = 50
N.control = 135
effect.size = 1.5
library(pwr)
sig = 0.05
p1 = pwr.t2n.test(d=effect.size,n1=N.cases,n2=N.control , sig.level = sig)$power
print(p1)
N.cases = 50
N.control = 135
effect.size = 0.5
library(pwr)
sig = 0.05
p1 = pwr.t2n.test(d=effect.size,n1=N.cases,n2=N.control , sig.level = sig)$power
print(p1)
N.cases = 50
N.control = 135
effect.size = 0.01
library(pwr)
sig = 0.05
p1 = pwr.t2n.test(d=effect.size,n1=N.cases,n2=N.control , sig.level = sig)$power
print(p1)
N.cases = 25
N.control = 25
effect.size = 0.5
library(pwr)
sig = 0.05
p1 = pwr.t2n.test(d=effect.size,n1=N.cases,n2=N.control , sig.level = sig)$power
print(p1)
library(ape)
s = '((8:0.213,(2:0.029,(7:0.000,9:0.000):0.029):0.184):0.270,(6:0.388,((1:0.031,(3:0.026,5:0.026):0.006):0.031,(4:0.045,10:0.045):0.018):0.325):0.096);'
tree = read.tree(text = s)
plot(s)
s
plot(tree,no.margin=TRUE,edge.width=2)
X = matrix(rnorm(20), 10, 2)
X
scale(X)
X1 = scale(X)
mean(X1[,1])
mean(X1[,2])
sd(X1[,2])
mean(X[,1])
X = 20 * X + 100
mean(X[,1])
X1 = scale(X)
mean(X1[,1])
2^5 - 1
install.packages('quickNmix')
library('quickNmix')
fitNmix(matrix(c(8, 4, 4), nrow = 1, ncol = 3))
library('quickNmix')
result = fitNmix(matrix(c(8, 4, 4), nrow = 1, ncol = 3))
View(result)
result[[2]]
result[[3]]
1- 0.9989
(1-0.9989)^2
(0.9989)^8
library('quickNmix')
result = fitNmix(matrix(c(8, 4, 4), nrow = 1, ncol = 3))
result
8/0.9989528
4/0.9989528
4/0.9989528
binom.test(5, 44, p = (20/44)^6)
library(RCurl)
grep("F", c("File 1", "File 2"))
grep("F", c("File 1", "File 2", "a.txt"))
grep("F", c("File 1", "File 2", "a.txt", "F"))
grep("F", c("File 1", "File 2", "a.txt", "f"))
grep("F", c("File 1", "File 2", "a.txt", "f"), ignore.case = T)
substr("File 1", start = 2, top = 4)
substr("File 1", start = 2, stop = 4)
gregexpr("ile", "File 1")
A = list()
B = c()
B
A
class(A)
class(B)
a = rnorm(5)
a
b = rnorm(5)
b
c = c(0.7197660, 0.6311252, 0.1720062, 0.7810312, 0.1500336, 0.6451196, -1.4192218,  0.7380878,  0.5890580,  0.1436986)
a,b
c = c(a,b)
c
a
b
c = list(a,b)
c
c = list(a,b,a,b,a,b)
c
c = list(a,list(a,b))
c
c = list(a,b)
c
c[1]
class(c[1])
c[[1]]
c = list(a,list(a,b))
c
c[[2]][[1]]
b
c[[2]][[1]]
a
c[[2]][[1]]
gregexpr("ile", "File 1")
result = gregexpr("ile", "File 1")
result[[1]]
result[[1]][1]
start = result[[1]][1]
start
result = gregexpr("ile", "ZZZZZFile 1")
start = result[[1]][1]
start
result = gregexpr("ile", "ZZZZZFile 1")
result
result = gregexpr("ile", c("File 1 ile ile", "ZZZFile 2"))
result
gsub("ile", "ILE", c("File 1", "File 2"))
gsub("ile", "ILE", c("File 1", "File 2 ZZ file 3"))
gsub("ile", "", c("File 1", "File 2 ZZ file 3"))
sub("ile", "", c("File 1", "File 2 ZZ file 3"))
vector()
vector(mode="character")
vector(mode="character", length=11)
view
paste(c('123','456'), collapse = TRUE)
paste(c('123','456'), collapse = '')
install.packages('randomForest')
install.packages('randomForests')
install.packages('randomForest')
randomForest
randomForest()
urlPackage <- "https://cran.r-project.org/src/contrib/Archive/randomForest/randomForest_4.6-12.tar.gz"
install.packages(urlPackage, repos=NULL, type="source")
install.packages('randomForest')
urlPackage <- "https://cran.r-project.org/src/contrib/Archive/randomForest/randomForest_4.6-12.tar.gz"
install.packages(urlPackage, repos=NULL, type="source")
count(c(1,2,3))
seq_along
library(stringr
)
count
seq_along(c(1,2,3))
count
nrow
count
nrow(c(1,2,3))
v = c('asdf')
nchar(v)
nrow(v)
row.names(v)
df = data.frame(A=c(1,2), b=c(3,4), d = c(5,6))
df
row.names(df)
rownames(df)
nrows(df)
nChar('abcd')
nchar('abcd')
nchars('abcd')
nrows(df)
numrows(df)
numrows(df)
df
nrow(df)
system("date")
t.test(c(1,2,3), c(4,5,6))
t.test(c(1,2,3), c(4,5,6,7,8,9))
round(0.5)
round(0.51)
round(0.49)
round(0.5)
ll = list(a = "123", b= "234")
ll[[c("a", "a", "b")]]
ll[c("a", "a", "b")]
as.vector(ll[c("a", "a", "b")])
unlist(ll[c("a", "a", "b")])
x = rnorm(5)
sqrt(mean(x*x))
sd(x)
x*x
sqrt(sum(x*x)/5)
sqrt(sum(x*x)/4)
matrix(rnorm(10), 5, 2)
x = matrix(rnorm(10), 5, 2)
mean(x)
iris
write.csv('~/iris.csv', iris[,-dim(iris)[2]])
write.csv('~/iris.csv', iris[,-5])
write.csv(iris[,-5], file='~/iris.csv')
exp(-33.33)
exp(-2.2)
exp(1.1)
8.49090385e-06 - -1.60652562e-05
0.0252945398 - 0.0253371218
8.49090385e-06 / -1.60652562e-05
0.0252945398 / 0.0253371218
0.05/13134324
stopwords
library(wordcloud)
stopwords
install.packages("stopwords")
y = tolower(x)
fn = "gatsby.txt"
s = readChar(fn, file.info(fn)$size)
setwd("~/Desktop/week08")
fn = "gatsby.txt"
s = readChar(fn, file.info(fn)$size)
nchar(s) # Print number of characters in text
x = strsplit(s, '\\s+')
x = unlist(x)
print(x[507:517])
y = tolower(x)
length(x)
library(stopwords)
length(x[!(x %in% stopwords("en"))])
t = table(x)
t[1:10]
class(t)
t[1]
t[1] < 5
t[1] < 2
x = tolower(x)
x = x[!(x %in% stopwords("en"))]
t = table(x)
t = t[t < 100]
x = tolower(x)
x = x[!(x %in% stopwords("en"))]
t = table(x)
t = t[t >= 100]
library(wordcloud)
length(t)
t
t = table(x)
t = t[t >= 20]
length(t)
wordcloud(names(t), t)
